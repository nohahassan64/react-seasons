{"version":3,"sources":["SeasonsDisplay.js","Spinner.js","App.js","index.js"],"names":["seasonsConfig","winter","text","iconName","summer","SeasonsDisplay","props","lat","month","seasons","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8MAGMA,EAAgB,CAClBC,OAAS,CACLC,KAAM,qBACNC,SAAU,aAEdC,OAAS,CACLF,KAAM,kBACNC,SAAU,QA2BHE,EAdQ,SAAAC,GAEnB,IAVgBC,EAAMC,EAUhBC,GAVUF,EAUWD,EAAMC,KAVXC,GAUiB,IAAIE,MAAOC,YATvC,GAAKH,EAAQ,EACbD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIJ,EAGAP,EAAcS,GAAlCP,EAHoB,EAGpBA,KAAOC,EAHa,EAGbA,SAEf,OACI,sBAAKS,UAAS,0BAAqBH,GAAnC,UACI,mBAAGG,UAAS,UAAKT,EAAL,6BACZ,6BAAKD,IACL,mBAAGU,UAAS,UAAKT,EAAL,mCC9BlBU,EAAU,SAAAP,GACZ,OACI,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACKN,EAAMQ,aAKvBD,EAAQE,aAAe,CACnBD,QAAS,cAEED,QCgBAG,E,4MAzBbC,MAAQ,CAAEV,IAAM,KAAOW,aAAc,I,uDAEtC,WAAqB,IAAD,OACnBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAMgB,EAASE,OAAOC,cAClD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,2BAI5C,WACK,OAAGc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IACjC,2CAAcqB,KAAKX,MAAMC,gBAE/BU,KAAKX,MAAMV,MAAQqB,KAAKX,MAAMC,aACxB,cAAC,EAAD,CAAgBX,IAAKqB,KAAKX,MAAMV,MAEhC,cAAC,EAAD,CAASO,QAAQ,qC,oBAG9B,WACE,OACA,8BAAMc,KAAKC,sB,GAtBGC,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.28715137.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SeasonsDisplay.css'\r\n\r\nconst seasonsConfig = {\r\n    winter : {\r\n        text: 'Burr , It\\'s Chilly',\r\n        iconName: 'snowflake'\r\n    },\r\n    summer : {\r\n        text: 'Let\\'s hit beach',\r\n        iconName: 'sun'\r\n    }\r\n};\r\n\r\n\r\nconst getSeasons = (lat , month) => {\r\n    if(month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer' : 'winter'\r\n    } else {\r\n        return lat > 0 ? 'winter' : 'summer'\r\n    }\r\n}\r\n\r\nconst SeasonsDisplay = props => {\r\n\r\n    const seasons = getSeasons(props.lat , new Date().getMonth());\r\n    const { text , iconName } = seasonsConfig[seasons]\r\n    \r\n    return (\r\n        <div className={`seasons-display ${seasons}`}>\r\n            <i className={`${iconName} icon icon-left massive`}></i>\r\n            <h1>{text}</h1>\r\n            <i className={`${iconName} icon icon-right massive `}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeasonsDisplay\r\n","import React from 'react'\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui text big loader\">\r\n                {props.message}\r\n            </div>            \r\n        </div>\r\n    )\r\n};\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\nexport default Spinner\r\n","import React from 'react'\nimport SeasonsDisplay from './SeasonsDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n  state = { lat : null , errorMessage: ''}\n\n componentDidMount() {\n  window.navigator.geolocation.getCurrentPosition(\n    position => this.setState({ lat : position.coords.latitude}),\n    err => this.setState({ errorMessage: err.message})\n  );\n };\n\n renderContent() {\n      if(this.state.errorMessage && !this.state.lat) {\n        return <div>Error : {this.state.errorMessage}</div>;\n      }\n      if(this.state.lat && !this.state.errorMessage) {\n        return <SeasonsDisplay lat={this.state.lat} />\n      }\n        return <Spinner message=\"Please accept location request\"/>;\n }\n\n  render() {\n    return (\n    <div>{this.renderContent()}</div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}